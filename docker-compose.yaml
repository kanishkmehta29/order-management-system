version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      interval: 10s
      timeout: 5s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9092 --list || exit 1
      interval: 10s
      timeout: 5s
      retries: 3

  mongodb:
    image: mongo:5.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 3

  seed:
    build:
      context: .
      dockerfile: seed/Dockerfile
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGODB_URI=mongodb://mongodb:27017

  order-service:
    build:
      context: .
      dockerfile: order-service/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    ports:
      - "50051:50051"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - KAFKA_BROKER=kafka:9092
      - DOCKER_CONTAINER=true

  inventory-service:
    build:
      context: .
      dockerfile: inventory-service/Dockerfile
    depends_on:
      order-service:
        condition: service_started
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - KAFKA_BROKER=kafka:9092
      - DOCKER_CONTAINER=true

  payment-service:
    build:
      context: .
      dockerfile: payment-service/Dockerfile
    depends_on:
      inventory-service:
        condition: service_started
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - KAFKA_BROKER=kafka:9092
      - DOCKER_CONTAINER=true

  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    depends_on:
      payment-service:
        condition: service_started
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - KAFKA_BROKER=kafka:9092
      - DOCKER_CONTAINER=true

volumes:
  mongodb-data: